Theory
Question 1 - How does Object-Oriented Programming differ from Process Oriented Programming?
Object-oriented programming is a programming model that refers to languages that use objects in programming. They use objects as a primary source to implement what should happen in the code. The main concepts of OOPs are classes/objects, abstraction, encapsulation, polymorphism and inheritance.

Procedural Oriented Programming uses a list of instructions to tell the computer what to do step-by-step and Programs are divided into functions

OOP is more secure than POP and you can use abstraction in OOP to hide data. OOP follows a bottom up approach whereas POP follows a top-down approach.

Question 2 - What's polymorphism in OOP?
Polymorphism in Object-Oriented Programming is the ability of an object to take on many forms.

There are two types of polymorphism, overriding and overloading. Overloading is performed between methods within the class whereas overriding is done between parent class and child class methods.

Question 3 - What's inheritance in OOP?
Inheritance is a feature in object-oriented programming which allows a class to reuse existing attributes and methods of another class.

Question 4 - If you had to make a program that could vote for the top three funniest people in the office, how would you do that? How would you make it possible to vote on those people?
Create a list of people who want to take part in the programme.

Question 5 - What's the software development life cycle?
The Software Development Life Cycle is a process used to design develop and test software. It's a clearly defined process that allows developers to create high-quality software.

The SDLC consists of six stages :

Requirement analysis - At this stage, all relevant information is gathered from the customer about the expectation of the product and what they require using a Software Requirement Specification (SRS) document.

System Design - At this stage, developers will outline details for the overall project. They will turn the SRS document into a more logicall structure so it can be implementedinto a programming language

Implementation - At this stage, once the SRS has been converted into source code, all the components of the software are implemented.

Testing - The testing stage starrts once all coding and implementation is complete and the modules are released for testing.

Deployment - Once the product has been tested and retested to the customers expectation, it is deployed into the production environment. Once this has been signed off by the customer, the product will go live.

Maintenance - Once the product is deployed, the maintenance stage discovers bugs that werenâ€™t picked up during testing and then resolves them. .

Question 6 - What's the difference between agile and waterfall?
The difference between agile and Waterfall is that Waterfall is a linear approach whereas Agile is a lot more flexible.

Question 7 - What is the reduced function used for?
Reduce () is a function in Python that implements a mathematical technique called reduction. It is used when you need to apply a function to an interable and reduce it to a single cumulative value.

Question 8 - How does merge sort work?
Merge Sort is an algorithm that is based on the principle of Divide and Conquer Algorithm.

Question 9 - Generators - generator functions allow you to declare a function that behaves like an iterator, i.e. it can be used in a for loop. What is the use case?
Question 10 - Decorators - a page for useful (or potentially abusive?) decorator ideas. What is the return type of the decorator?
Decorators in Python modify the behavior of a function without modifying it permanently.
